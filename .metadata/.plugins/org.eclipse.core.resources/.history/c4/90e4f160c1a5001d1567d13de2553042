package com.mvc.controller;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class DispathcerServlet extends HttpServlet{
	Properties props;
	@Override
	public void init() throws ServletException {
		props = new Properties();
		getServletContext().getRealPath("/WEB-INF");
		String path = "/MVCApplication/src/main/webapp/WEB-INF/mapping.data";
		try {
			props.load(new FileInputStream(path));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doRequest(request, response);
	}
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doRequest(request, response);
	}
	
	protected void doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		
		String uri = request.getRequestURI();
		
		String view = null;
		if(uri.equals("/blood.do")) {
			BloodController bloodController = new BloodController();
			view = bloodController.execute(request, response);
		} else if(uri.equals("/movie.do")) {
			MovieController movieController = new MovieController();
			view = movieController.handle(request, response);
		}
		RequestDispatcher dis = request.getRequestDispatcher(view);
		dis.forward(request, response);
	}
}
